#include <functional>

struct FloatHash {
    size_t operator()(float value) const {
        // Преобразование значения в битовую последовательность
        // и использование std::hash для хэширования битов
        return std::hash<unsigned int>()(*reinterpret_cast<unsigned int*>(&value));
    }
};

/*Свойства данной хэш-функции:

Консистентность: Для одного и того же значения числа с плавающей точкой всегда будет вычисляться один и тот же хэш-код.

Равномерное распределение: Хэш-функция преобразует значение числа с плавающей точкой в битовую последовательность и 
затем использует обычную хэш-функцию для хэширования битов. Обычно хорошие хэш-функции стараются равномерно распределить 
хэш-коды по всему диапазону, и std::hash обычно обладает этим свойством.

Эффективность: Хэш-функция выполняет преобразование значения числа с плавающей точкой в битовую последовательность, что 
обычно является простой операцией. Затем используется стандартная хэш-функция для хэширования битов, что также является 
эффективной операцией. */
